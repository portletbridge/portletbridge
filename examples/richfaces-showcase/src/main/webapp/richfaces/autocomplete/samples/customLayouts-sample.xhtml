<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich">
	<p>Below is a sample of <b>rich:autocomplete</b> with <b>table layout</b>. <b>rich:column</b>
	components wraps the content additionally in order to define
	cells.</p>
	<h:form>
		<rich:autocomplete autocompleteList="#{autocompleteBean.capitals}"
			var="cap" fetchValue="#{cap.state}" layout="table">
			<rich:column>
				<h:graphicImage value="#{portletRes[cap.stateFlag]}" />
			</rich:column>
			<rich:column>
				<b>#{cap.state}</b>
			</rich:column>
			<rich:column>
        		#{cap.name} 
        	</rich:column>
		</rich:autocomplete>
	</h:form>
	<p>And next is the sample of simple div (default) layout. You're responsible to align the inners content 
	within single div there.</p>
	<h:form>
		<rich:autocomplete autocompleteList="#{autocompleteBean.capitals}"
			var="cap" fetchValue="#{cap.state}" layout="div">
			<b>#{cap.state}</b> -
        		<i>(#{cap.name}) </i>
		</rich:autocomplete>
	</h:form>
</ui:composition>